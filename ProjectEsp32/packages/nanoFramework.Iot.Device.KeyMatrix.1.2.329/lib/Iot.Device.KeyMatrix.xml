<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Iot.Device.KeyMatrix</name>
    </assembly>
    <members>
        <member name="T:System.SpanPinValue">
            <summary>
            Provides a type- and memory-safe representation of a contiguous region of arbitrary array.
            </summary>
        </member>
        <member name="M:System.SpanPinValue.#ctor(System.Device.Gpio.PinValue[])">
            <summary>
            Creates a new Span object over the entirety of a specified array.
            </summary>
            <param name="array">The array from which to create the System.Span object.</param>
        </member>
        <member name="M:System.SpanPinValue.#ctor(System.Device.Gpio.PinValue[],System.Int32,System.Int32)">
            <summary>
            Creates a new Span object that includes a specified number of elements
            of an array starting at a specified index.
            </summary>
            <param name="array">The source array.</param>
            <param name="start">The index of the first element to include in the new System.Span</param>
            <param name="length">The number of elements to include in the new System.Span</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            array is null, but start or length is non-zero. -or- start is outside the bounds
            of the array. -or- start and length exceeds the number of elements in the array.
            </exception>
        </member>
        <member name="P:System.SpanPinValue.Item(System.Int32)">
            <summary>
            Gets the element at the specified zero-based index.
            </summary>
            <param name="index">The zero-based index of the element.</param>
            <returns>The element at the specified index.</returns>
        </member>
        <member name="P:System.SpanPinValue.Empty">
            <summary>
            Returns an empty System.Span object.
            </summary>
        </member>
        <member name="P:System.SpanPinValue.Length">
            <summary>
            Returns the length of the current span.
            </summary>
        </member>
        <member name="P:System.SpanPinValue.IsEmpty">
            <summary>
            Returns a value that indicates whether the current System.Span is empty.
            true if the current span is empty; otherwise, false.
            </summary>
        </member>
        <member name="M:System.SpanPinValue.CopyTo(System.SpanPinValue)">
            <summary>
            Copies the contents of this System.Span into a destination System.Span.
            </summary>
            <param name="destination"> The destination System.Span object.</param>
            <exception cref="T:System.ArgumentException">
            destination is shorter than the source System.Span.
            </exception>
        </member>
        <member name="M:System.SpanPinValue.Slice(System.Int32)">
            <summary>
            Forms a slice out of the current span that begins at a specified index.
            </summary>
            <param name="start">The index at which to begin the slice.</param>
            <returns>A span that consists of all elements of the current span from start to the end of the span.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">start is less than zero or greater than System.Span.Length.</exception>
        </member>
        <member name="M:System.SpanPinValue.Slice(System.Int32,System.Int32)">
            <summary>
            Forms a slice out of the current span starting at a specified index for a specified length.
            </summary>
            <param name="start">The index at which to begin this slice.</param>
            <param name="length">The desired length for the slice.</param>
            <returns>A span that consists of length elements from the current span starting at start.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">start or start + length is less than zero or greater than System.Span.Length.</exception>
        </member>
        <member name="M:System.SpanPinValue.ToArray">
            <summary>
            Copies the contents of this span into a new array.
            </summary>
            <returns> An array containing the data in the current span.</returns>
        </member>
        <member name="T:Iot.Device.KeyMatrix.KeyMatrix">
            <summary>
            GPIO key matrix Driver
            </summary>
        </member>
        <member name="P:Iot.Device.KeyMatrix.KeyMatrix.OutputPins">
            <summary>
            Get output pins
            </summary>
        </member>
        <member name="P:Iot.Device.KeyMatrix.KeyMatrix.InputPins">
            <summary>
            Get input pins
            </summary>
        </member>
        <member name="P:Iot.Device.KeyMatrix.KeyMatrix.Values">
            <summary>
            Get all buttons' values
            </summary>
        </member>
        <member name="P:Iot.Device.KeyMatrix.KeyMatrix.ScanInterval">
            <summary>
            Get or set interval in milliseconds
            </summary>
        </member>
        <member name="P:Iot.Device.KeyMatrix.KeyMatrix.Item(System.Int32)">
            <summary>
            Get buttons' values by output
            </summary>
            <param name="output">Output index</param>
        </member>
        <member name="T:Iot.Device.KeyMatrix.KeyMatrix.KeyEventHandler">
            <summary>
            Fire an event when a key is pressed or released
            </summary>
            <param name="sender">The sender KeyMatrix</param>
            <param name="keyMatrixEvent">The key event</param>
        </member>
        <member name="E:Iot.Device.KeyMatrix.KeyMatrix.KeyEvent">
            <summary>
            The raised event
            </summary>
        </member>
        <member name="M:Iot.Device.KeyMatrix.KeyMatrix.#ctor(System.Int32[],System.Int32[],System.TimeSpan,System.Device.Gpio.GpioController,System.Boolean)">
            <summary>
            Initialize key matrix
            </summary>
            <param name="outputPins">Output pins</param>
            <param name="inputPins">Input pins</param>
            <param name="scanInterval">Scanning interval in milliseconds</param>
            <param name="gpioController">GPIO controller</param>
            <param name="shouldDispose">True to dispose the GpioController</param>
        </member>
        <member name="M:Iot.Device.KeyMatrix.KeyMatrix.StartListeningKeyEvent">
            <summary>
            Start listening to key events
            </summary>
        </member>
        <member name="M:Iot.Device.KeyMatrix.KeyMatrix.StopListeningKeyEvent">
            <summary>
            Stop listening to key events
            </summary>
        </member>
        <member name="M:Iot.Device.KeyMatrix.KeyMatrix.ReadKey">
            <summary>
            Blocks execution until a key event is received
            </summary>
        </member>
        <member name="M:Iot.Device.KeyMatrix.KeyMatrix.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:Iot.Device.KeyMatrix.KeyMatrixEvent">
            <summary>
            Keyboard event
            </summary>
        </member>
        <member name="P:Iot.Device.KeyMatrix.KeyMatrixEvent.EventType">
            <summary>
            Event type of current button. PinEventTypes.Rising is pressedï¼ŒPinEventTypes.Falling is released
            </summary>
        </member>
        <member name="P:Iot.Device.KeyMatrix.KeyMatrixEvent.Output">
            <summary>
            Current button's output index
            </summary>
        </member>
        <member name="P:Iot.Device.KeyMatrix.KeyMatrixEvent.Input">
            <summary>
            Current button's input index
            </summary>
        </member>
    </members>
</doc>
